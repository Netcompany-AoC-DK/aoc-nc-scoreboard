{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["HighscoreType","hourInMs","hourInS","days","Array","fill","lastDayOfAoC","Date","curDate","numEnabledDays","Math","min","getDate","map","_","idx","initialiseScores","scores","playerList","sortPlayersForDay","BothStars","Object","entries","members","i","insertStarGainsForDay","StarGain","getNthStarTs","player","n","day","completion_day_level","get_star_ts","highscoreType","bothStarsSort","Delta","sort","playerA","playerB","playerA2Ts","playerB2Ts","playerA1Ts","playerB1Ts","Number","MAX_SAFE_INTEGER","deltaDaySort","playerAStarGain","parseInt","star_gain","starGainSort","FirstStar","firstStarSort","firstStarSortedList","secondStarSortedList","forEach","players","dayCompletion","length","renderUnixTimestamp","ts","undefined","date0Ms","getTime","diff","playerHours","floor","playerMinutes","playerSeconds","toString","padStart","renderPlayerTime","selectedDay","firstStarTime","secondStarTime","deltaStarTime","renderPlayerDeltaTimestamp","star1Gain","star2Gain","className","getPlacementClass","App","useState","setPlayers","useEffect","then","score","setSelectedDay","selectedScoreType","setSelectedScoreType","showScoreboardInput","setShowScoreboardInput","customJSON","setCustomJSON","href","onClick","ev","preventDefault","stopPropagation","split","dayNumber","dayNumberIdx","value","onChange","scoreType","target","name","id","renderPlayer","htmlFor","JSON","parse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5d02629.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nenum HighscoreType {\n  BothStars = 'bothstars',\n  Delta = 'delta',\n  StarGain = 'stargain',\n  FirstStar = 'firststar',\n}\nconst hourInMs = 1000*60*60;\nconst hourInS = 60*60;\nconst minuteInMs = 1000*60;\nconst minuteInS = 60;\nconst secondInMs = 1000;\nlet days = new Array(25).fill(false);\nlet lastDayOfAoC = new Date(2022, 11, 25);\nlet curDate = new Date();\nlet curDay = new Date(Math.min(+lastDayOfAoC, +curDate)).getDate()\nconst numEnabledDays = curDay;\ndays = days.map((_, idx) => idx+1 > numEnabledDays ? false : true)\nconst playerList = undefined\n\nfunction initialiseScores(scores: any) {\n  let playerList = sortPlayersForDay(\"\"+numEnabledDays, HighscoreType.BothStars, Object.entries(scores.members));\n  for (let i = 0; i < numEnabledDays; i++) {\n    insertStarGainsForDay(\"\"+(i+1), playerList);\n  }\n  playerList = sortPlayersForDay(\"\"+numEnabledDays, HighscoreType.StarGain, playerList)\n  return playerList;\n} \n\n\nfunction App() {\n  const [players, setPlayers] = useState<any[]>(playerList ?? []);\n  useEffect(() => {\n    import('./scores.json').then((score) => {\n      setPlayers(initialiseScores(score));\n    });\n  },[])\n  const [selectedDay, setSelectedDay] = useState<string>(\"\"+numEnabledDays);\n  const [selectedScoreType, setSelectedScoreType] = useState<HighscoreType>(HighscoreType.StarGain);\n  const [showScoreboardInput, setShowScoreboardInput] = useState<boolean>(false);\n  const [customJSON, setCustomJSON] = useState<string>('')\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"privboard-row\">\n          <span className=\"privboard-days\">\n            {days.map((day, idx) => {\n              // eslint-disable-next-line jsx-a11y/anchor-is-valid\n              return day ? <a href=\"\" className={\"\"+(idx+1) === selectedDay ? 'bold':''} onClick={(ev) => {\n                ev.preventDefault()\n                ev.stopPropagation();\n                setSelectedDay(\"\"+(idx+1));\n                setPlayers(sortPlayersForDay(\"\"+(idx+1), selectedScoreType, players));\n              }}>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</a> : <span>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</span>\n            })}\n          </span>\n        </div>\n      </header>\n      <section>\n      <select value={selectedScoreType} onChange={(ev) => {\n        const scoreType = ev.target.value as HighscoreType;\n        setSelectedScoreType(scoreType)\n        setPlayers(sortPlayersForDay(selectedDay, scoreType, players));\n      }}>\n              <option value={HighscoreType.BothStars}>Time to both stars</option>\n              <option value={HighscoreType.FirstStar}>Time to first star</option>\n              <option value={HighscoreType.Delta}>Time between star 1 and 2</option>\n              <option value={HighscoreType.StarGain}>Points gained</option>\n      </select>\n\n        {players.map((player, idx) => {\n          return renderPlayer(player[1], selectedDay, idx, selectedScoreType);\n        })}\n        \n      </section>\n      <aside className={`score-input-aside ${showScoreboardInput ? 'expanded' : ''}`}>\n        <label htmlFor=\"scoresinput\">Insert custom scoreboard JSON</label><button className=\"link-like-button\" onClick={() => setShowScoreboardInput(!showScoreboardInput)}>{showScoreboardInput ? '-' : '+'}</button>\n        {showScoreboardInput && <textarea id=\"scoresinput\" value={customJSON} onChange={(ev) => {\n          setCustomJSON(ev.target.value)\n        }}></textarea>}\n        {showScoreboardInput && <button onClick={() => {\n          let parsedScore = JSON.parse(customJSON);\n          let playerList = initialiseScores(parsedScore);\n          setPlayers(playerList);\n        }}>Set scoreboard</button>}\n      </aside>\n    </div>\n  );\n}\nfunction getNthStarTs(player: any, n: number, day: string) {\n  return player.completion_day_level[day]?.[\"\"+n]?.get_star_ts;\n}\nfunction sortPlayersForDay(day: string, highscoreType: HighscoreType, playerList: any[]): any[] {\n  switch(highscoreType) {\n    case HighscoreType.BothStars:\n      return bothStarsSort(day, playerList);\n    case HighscoreType.Delta:\n      return deltaDaySort(day, playerList);\n    case HighscoreType.StarGain:\n      return starGainSort(day, playerList);\n    case HighscoreType.FirstStar:\n      return firstStarSort(day, playerList);\n  }\n}\nfunction bothStarsSort(day: string, playerList: any[]): any[] {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return playerA2Ts - playerB2Ts;\n    } else if (playerA2Ts && !playerB2Ts) {\n      return playerA2Ts - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - playerB2Ts;\n    }\n    return (playerA1Ts ?? Number.MAX_SAFE_INTEGER) - (playerB1Ts ?? Number.MAX_SAFE_INTEGER);\n  });\n}\nfunction deltaDaySort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA2Ts && playerB2Ts) {\n      return (playerA2Ts - playerA1Ts) - (playerB2Ts - playerB1Ts);\n    } else if (playerA2Ts && !playerB2Ts) {\n      return (playerA2Ts - playerA1Ts) - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA2Ts && playerB2Ts) {\n      return Number.MAX_SAFE_INTEGER - (playerB2Ts - playerB1Ts);\n    }\n    return 0;\n  });\n}\n\nfunction starGainSort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA1Star = parseInt(playerA[1].completion_day_level[day]?.[\"1\"]?.star_gain);\n    const playerA2Star = parseInt(playerA[1].completion_day_level[day]?.[\"2\"]?.star_gain);\n    const playerAStarGain = playerA1Star + playerA2Star;\n    const playerB1Star = parseInt(playerB[1].completion_day_level[day]?.[\"1\"]?.star_gain);\n    const playerB2Star = parseInt(playerB[1].completion_day_level[day]?.[\"2\"]?.star_gain);\n    const playerBStarGain = playerB1Star + playerB2Star;\n    return playerBStarGain - playerAStarGain;\n  });\n}\n\nfunction firstStarSort(day: string, playerList: any[]) {\n  return [...playerList].sort((playerA, playerB) => {\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\n    if (playerA1Ts && playerB1Ts) {\n      return (playerA1Ts) - (playerB1Ts);\n    } else if (playerA1Ts && !playerB1Ts) {\n      return (playerA1Ts) - Number.MAX_SAFE_INTEGER;\n    } else if (!playerA1Ts && playerB1Ts) {\n      return Number.MAX_SAFE_INTEGER - (playerB1Ts - playerB1Ts);\n    }\n    return 0;\n  });\n}\n\nfunction insertStarGainsForDay(day: string, playerList: any[]) {\n  let firstStarSortedList = firstStarSort(day, playerList);\n  let secondStarSortedList = bothStarsSort(day, playerList);\n  firstStarSortedList.forEach((player, idx, players) => {\n    let dayCompletion = player[1].completion_day_level[day]?.[\"1\"];\n    if (dayCompletion) {\n      dayCompletion.star_gain = players.length-idx;\n    } else {\n      player[1].completion_day_level[day] = {\n        '1': {\n          star_gain: 0,\n        },\n      }\n    }\n  });\n  secondStarSortedList.forEach((player, idx, players) => {\n    let dayCompletion = player[1].completion_day_level[day]?.[\"2\"];\n    if (dayCompletion) {\n      dayCompletion.star_gain = players.length-idx;\n    } else {\n      player[1].completion_day_level[day] = {\n        ...player[1].completion_day_level[day],\n        '2': {\n          star_gain: 0,\n        },\n      }\n    }\n  });\n}\n\nfunction renderUnixTimestamp(ts: number, day: string): string {\n  if (ts === undefined) {\n    return '';\n  }\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  const date0Ms = new Date(2022, 11, parseInt(day), 6, 0, 0, 0).getTime();\n  const finishTime = new Date(ts * 1000).getTime();\n  const diff = finishTime - date0Ms;\n\n  const playerHours = Math.floor(diff/hourInMs);\n  const playerMinutes = Math.floor((diff%hourInMs)/minuteInMs);\n  const playerSeconds = Math.floor((diff%minuteInMs)/secondInMs);\n  // Will display time in 10:30:23 format\n  var formattedTime = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedTime\n}\n\nfunction renderPlayerTime(player: any, selectedDay: string, highscoreType: HighscoreType) {\n  if (highscoreType === HighscoreType.BothStars || highscoreType === HighscoreType.FirstStar) {\n    return `${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts as number, selectedDay)} / ${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts as number, selectedDay)}`\n  } else if (highscoreType === HighscoreType.Delta) {\n    return renderPlayerDeltaTimestamp(player, selectedDay);\n  } else if (highscoreType === HighscoreType.StarGain) {\n    let star1Gain = player.completion_day_level?.[selectedDay]?.[\"1\"]?.star_gain;\n    let star2Gain = player.completion_day_level?.[selectedDay]?.[\"2\"]?.star_gain;\n    return <><span className=\"privboard-star-firstonly\">{star1Gain}</span>{' / '}<span className=\"privboard-star-both\">{star2Gain}</span>{' -> '}<span className=\"privboard-star-both\">{(star1Gain??0)+(star2Gain??0)}</span></>;\n  }\n}\n\nfunction renderPlayerDeltaTimestamp(player: any, selectedDay: string) {\n  const firstStarTime = player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts;\n  const secondStarTime = player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts;\n  if (secondStarTime === undefined) {\n    return '';\n  }\n  const deltaStarTime = secondStarTime - firstStarTime;\n  const playerHours = Math.floor(deltaStarTime/hourInS);\n  const playerMinutes = Math.floor((deltaStarTime%hourInS)/minuteInS);\n  const playerSeconds = Math.floor((deltaStarTime%minuteInS));\n  var formattedDelta = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\n  return formattedDelta;\n}\n\nfunction getPlacementClass(idx: number) {\n  switch(idx) {\n    case 0:\n      return 'privboard-star-both';\n    case 1:\n      return 'privboard-star-firstonly';\n    case 2:\n      return 'privboard-third';\n    default:\n      return '';\n  }\n}\n\nfunction renderPlayer(player: any, selectedDay: string, idx: number, highscoreType: HighscoreType) {\n  return (\n    <div className=\"privboard-row\">\n      <span className=\"privboard-position\">{idx+1})</span> {renderPlayerTime(player, selectedDay, highscoreType)} <span className={`privboard-name ${getPlacementClass(idx)} ${player.name === null ? 'leaderboard-anon' : ''}`}>{player.name ?? `(anonymous user #${player.id})`}</span></div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}