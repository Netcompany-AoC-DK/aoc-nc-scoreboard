{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["HighscoreType","hourInMs","hourInS","days","Array","fill","map","_","idx","playerList","initialiseScores","scores","sortPlayersForDay","BothStars","Object","entries","members","i","insertStarGainsForDay","getNthStarTs","player","n","day","completion_day_level","get_star_ts","highscoreType","bothStarsSort","Delta","sort","playerA","playerB","playerA2Ts","playerB2Ts","playerA1Ts","playerB1Ts","Number","MAX_SAFE_INTEGER","deltaDaySort","StarGain","playerAStarGain","parseInt","star_gain","starGainSort","FirstStar","firstStarSort","firstStarSortedList","secondStarSortedList","forEach","players","dayCompletion","length","renderUnixTimestamp","ts","undefined","date0Ms","Date","getTime","diff","playerHours","Math","floor","playerMinutes","playerSeconds","toString","padStart","renderPlayerTime","selectedDay","firstStarTime","secondStarTime","deltaStarTime","renderPlayerDeltaTimestamp","star1Gain","star2Gain","className","getPlacementClass","App","useState","setPlayers","setSelectedDay","selectedScoreType","setSelectedScoreType","showScoreboardInput","setShowScoreboardInput","customJSON","setCustomJSON","href","onClick","ev","preventDefault","stopPropagation","split","dayNumber","dayNumberIdx","value","onChange","scoreType","target","name","id","renderPlayer","htmlFor","JSON","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAGKA,E,6FAAAA,K,sBAAAA,E,cAAAA,E,oBAAAA,E,uBAAAA,M,KAML,IAAMC,EAAW,KACXC,EAAU,KAIZC,EAAO,IAAIC,MAAM,IAAIC,MAAK,GAG9BF,EAAOA,EAAKG,KAAI,SAACC,EAAGC,GAAJ,QAAYA,EAAI,EAFnB,MAGb,IAAMC,EAAaC,EAAiBC,GAEpC,SAASD,EAAiBC,GAExB,IADA,IAAMF,EAAaG,EAAkB,IAAmBZ,EAAca,UAAWC,OAAOC,QAAQJ,EAAOK,UAC9FC,EAAI,EAAGA,EAPL,EAOyBA,IAClCC,EAAsB,IAAID,EAAE,GAAIR,GAElC,OAAOA,EAyDT,SAASU,EAAaC,EAAaC,EAAWC,GAAc,IAAD,IACzD,iBAAOF,EAAOG,qBAAqBD,UAAnC,iBAAO,EAAmC,GAAGD,UAA7C,aAAO,EAA0CG,YAEnD,SAASZ,EAAkBU,EAAaG,EAA8BhB,GACpE,OAAOgB,GACL,KAAKzB,EAAca,UACjB,OAAOa,EAAcJ,EAAKb,GAC5B,KAAKT,EAAc2B,MACjB,OAuBN,SAAsBL,EAAab,GACjC,OAAO,YAAIA,GAAYmB,MAAK,SAACC,EAASC,GACpC,IAAMC,EAAaZ,EAAaU,EAAQ,GAAI,EAAGP,GACzCU,EAAab,EAAaW,EAAQ,GAAI,EAAGR,GACzCW,EAAad,EAAaU,EAAQ,GAAI,EAAGP,GACzCY,EAAaf,EAAaW,EAAQ,GAAI,EAAGR,GAC/C,OAAIS,GAAcC,EACRD,EAAaE,GAAeD,EAAaE,GACxCH,IAAeC,EAChBD,EAAaE,EAAcE,OAAOC,kBAChCL,GAAcC,EACjBG,OAAOC,kBAAoBJ,EAAaE,GAE1C,KApCEG,CAAaf,EAAKb,GAC3B,KAAKT,EAAcsC,SACjB,OAsCN,SAAsBhB,EAAab,GACjC,OAAO,YAAIA,GAAYmB,MAAK,SAACC,EAASC,GAAa,IAAD,gBAG1CS,EAFeC,SAAQ,UAACX,EAAQ,GAAGN,qBAAqBD,UAAjC,iBAAC,EAAuC,UAAxC,aAAC,EAA6CmB,WACtDD,SAAQ,UAACX,EAAQ,GAAGN,qBAAqBD,UAAjC,iBAAC,EAAuC,UAAxC,aAAC,EAA6CmB,WAK3E,OAHqBD,SAAQ,UAACV,EAAQ,GAAGP,qBAAqBD,UAAjC,iBAAC,EAAuC,UAAxC,aAAC,EAA6CmB,WACtDD,SAAQ,UAACV,EAAQ,GAAGP,qBAAqBD,UAAjC,iBAAC,EAAuC,UAAxC,aAAC,EAA6CmB,WAElDF,KA9ChBG,CAAapB,EAAKb,GAC3B,KAAKT,EAAc2C,UACjB,OAAOC,EAActB,EAAKb,IAGhC,SAASiB,EAAcJ,EAAab,GAClC,OAAO,YAAIA,GAAYmB,MAAK,SAACC,EAASC,GACpC,IAAMC,EAAaZ,EAAaU,EAAQ,GAAI,EAAGP,GACzCU,EAAab,EAAaW,EAAQ,GAAI,EAAGR,GACzCW,EAAad,EAAaU,EAAQ,GAAI,EAAGP,GACzCY,EAAaf,EAAaW,EAAQ,GAAI,EAAGR,GAC/C,OAAIS,GAAcC,EACTD,EAAaC,EACXD,IAAeC,EACjBD,EAAaI,OAAOC,kBACjBL,GAAcC,EACjBG,OAAOC,iBAAmBJ,GAE5B,OAACC,QAAD,IAACA,IAAcE,OAAOC,mBAAtB,OAA2CF,QAA3C,IAA2CA,IAAcC,OAAOC,qBAgC3E,SAASQ,EAActB,EAAab,GAClC,OAAO,YAAIA,GAAYmB,MAAK,SAACC,EAASC,GACpC,IAAMG,EAAad,EAAaU,EAAQ,GAAI,EAAGP,GACzCY,EAAaf,EAAaW,EAAQ,GAAI,EAAGR,GAC/C,OAAIW,GAAcC,EACRD,EAAeC,EACdD,IAAeC,EAChBD,EAAcE,OAAOC,kBACnBH,GAAcC,EACjBC,OAAOC,kBAAoBF,EAAaA,GAE1C,KAIX,SAAShB,EAAsBI,EAAab,GAC1C,IAAIoC,EAAsBD,EAActB,EAAKb,GACzCqC,EAAuBpB,EAAcJ,EAAKb,GAC9CoC,EAAoBE,SAAQ,SAAC3B,EAAQZ,EAAKwC,GAAa,IAAD,EAChDC,EAAa,UAAG7B,EAAO,GAAGG,qBAAqBD,UAAlC,aAAG,EAAsC,GACtD2B,EACFA,EAAcR,UAAYO,EAAQE,OAAO1C,EAEzCY,EAAO,GAAGG,qBAAqBD,GAAO,CACpC,EAAK,CACHmB,UAAW,OAKnBK,EAAqBC,SAAQ,SAAC3B,EAAQZ,EAAKwC,GAAa,IAAD,EACjDC,EAAa,UAAG7B,EAAO,GAAGG,qBAAqBD,UAAlC,aAAG,EAAsC,GACtD2B,EACFA,EAAcR,UAAYO,EAAQE,OAAO1C,EAEzCY,EAAO,GAAGG,qBAAqBD,GAA/B,2BACKF,EAAO,GAAGG,qBAAqBD,IADpC,IAEE,EAAK,CACHmB,UAAW,QAOrB,SAASU,EAAoBC,EAAY9B,GACvC,QAAW+B,IAAPD,EACF,MAAO,GAIT,IAAME,EAAU,IAAIC,KAAK,KAAM,GAAIf,SAASlB,GAAM,EAAG,EAAG,EAAG,GAAGkC,UAExDC,EADa,IAAIF,KAAU,IAALH,GAAWI,UACbF,EAEpBI,EAAcC,KAAKC,MAAMH,EAAKxD,GAC9B4D,EAAgBF,KAAKC,MAAOH,EAAKxD,EA3LtB,KA4LX6D,EAAgBH,KAAKC,MAAOH,EA5LjB,IAEA,KA6LjB,OADoBC,EAAc,IAAMG,EAAcE,WAAWC,SAAS,EAAG,KAAM,IAAMF,EAAcC,WAAWC,SAAS,EAAG,KAIhI,SAASC,EAAiB7C,EAAa8C,EAAqBzC,GACmC,IAAD,YAA5F,GAAIA,IAAkBzB,EAAca,WAAaY,IAAkBzB,EAAc2C,UAC/E,MAAM,GAAN,OAAUQ,EAAmB,UAAC/B,EAAOG,4BAAR,iBAAC,EAA8B2C,UAA/B,iBAAC,EAA6C,UAA9C,aAAC,EAAmD1C,YAAuB0C,GAAxG,cAA0Hf,EAAmB,UAAC/B,EAAOG,4BAAR,iBAAC,EAA8B2C,UAA/B,iBAAC,EAA6C,UAA9C,aAAC,EAAmD1C,YAAuB0C,IACnN,GAAIzC,IAAkBzB,EAAc2B,MACzC,OAQJ,SAAoCP,EAAa8C,GAAsB,IAAD,YAC9DC,EAAa,UAAG/C,EAAOG,4BAAV,iBAAG,EAA8B2C,UAAjC,iBAAG,EAA6C,UAAhD,aAAG,EAAmD1C,YACnE4C,EAAc,UAAGhD,EAAOG,4BAAV,iBAAG,EAA8B2C,UAAjC,iBAAG,EAA6C,UAAhD,aAAG,EAAmD1C,YAC1E,QAAuB6B,IAAnBe,EACF,MAAO,GAET,IAAMC,EAAgBD,EAAiBD,EACjCT,EAAcC,KAAKC,MAAMS,EAAcnE,GACvC2D,EAAgBF,KAAKC,MAAOS,EAAcnE,EArNhC,IAsNV4D,EAAgBH,KAAKC,MAAOS,EAtNlB,IAwNhB,OADqBX,EAAc,IAAMG,EAAcE,WAAWC,SAAS,EAAG,KAAM,IAAMF,EAAcC,WAAWC,SAAS,EAAG,KAlBtHM,CAA2BlD,EAAQ8C,GACrC,GAAIzC,IAAkBzB,EAAcsC,SAAU,CAAC,IAAD,YAC/CiC,EAAS,UAAGnD,EAAOG,4BAAV,iBAAG,EAA8B2C,UAAjC,iBAAG,EAA6C,UAAhD,aAAG,EAAmDzB,UAC/D+B,EAAS,UAAGpD,EAAOG,4BAAV,iBAAG,EAA8B2C,UAAjC,iBAAG,EAA6C,UAAhD,aAAG,EAAmDzB,UACnE,OAAO,qCAAE,sBAAMgC,UAAU,2BAAhB,SAA4CF,IAAkB,MAAM,sBAAME,UAAU,sBAAhB,SAAuCD,IAAkB,OAAO,sBAAMC,UAAU,sBAAhB,UAAuC,OAACF,QAAD,IAACA,IAAW,IAAZ,OAAgBC,QAAhB,IAAgBA,IAAW,SAkBnN,SAASE,EAAkBlE,GACzB,OAAOA,GACL,KAAK,EACH,MAAO,sBACT,KAAK,EACH,MAAO,2BACT,KAAK,EACH,MAAO,kBACT,QACE,MAAO,IAWEmE,MA9Nf,WACE,MAA8BC,mBAAgBnE,GAA9C,mBAAOuC,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAiB,KAAvD,mBAAOV,EAAP,KAAoBY,EAApB,KACA,EAAkDF,mBAAwB5E,EAAca,WAAxF,mBAAOkE,EAAP,KAA0BC,EAA1B,KACA,EAAsDJ,oBAAkB,GAAxE,mBAAOK,EAAP,KAA4BC,EAA5B,KACA,EAAoCN,mBAAiB,IAArD,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,iBAAhB,SACGtE,EAAKG,KAAI,SAACgB,EAAKd,GACd,OAAOc,EAAM,mBAAG+D,KAAK,GAAGZ,UAAW,IAAIjE,EAAI,KAAO0D,EAAc,OAAO,GAAIoB,QAAS,SAACC,GACnFA,EAAGC,iBACHD,EAAGE,kBACHX,EAAe,IAAItE,EAAI,IACvBqE,EAAWjE,EAAkB,IAAIJ,EAAI,GAAIuE,EAAmB/B,KAJjD,UAKRxC,EAAI,GAAGuD,WAAW2B,MAAM,IAAIpF,KAAI,SAACqF,EAAWC,GAAZ,OAA6B,qCAAGA,EAAe,EAAI,uBAAQ,6BAAOD,UAAsB,gCAAQnF,EAAI,GAAGuD,WAAW2B,MAAM,IAAIpF,KAAI,SAACqF,EAAWC,GAAZ,OAA6B,qCAAGA,EAAe,EAAI,uBAAQ,6BAAOD,mBAK/O,oCACA,yBAAQE,MAAOd,EAAmBe,SAAU,SAACP,GAC3C,IAAMQ,EAAYR,EAAGS,OAAOH,MAC5Bb,EAAqBe,GACrBlB,EAAWjE,EAAkBsD,EAAa6B,EAAW/C,KAHvD,UAKQ,wBAAQ6C,MAAO7F,EAAca,UAA7B,gCACA,wBAAQgF,MAAO7F,EAAc2C,UAA7B,gCACA,wBAAQkD,MAAO7F,EAAc2B,MAA7B,uCACA,wBAAQkE,MAAO7F,EAAcsC,SAA7B,8BAGLU,EAAQ1C,KAAI,SAACc,EAAQZ,GACpB,OAoLV,SAAsBY,EAAa8C,EAAqB1D,EAAaiB,GAA+B,IAAD,EACjG,OACE,sBAAKgD,UAAU,gBAAf,UACE,uBAAMA,UAAU,qBAAhB,UAAsCjE,EAAI,EAA1C,OADF,IACwDyD,EAAiB7C,EAAQ8C,EAAazC,GAD9F,IAC8G,sBAAMgD,UAAS,yBAAoBC,EAAkBlE,GAAtC,YAA8D,OAAhBY,EAAO6E,KAAgB,mBAAqB,IAAzG,mBAAgH7E,EAAO6E,YAAvH,mCAAmJ7E,EAAO8E,GAA1J,UAvLjGC,CAAa/E,EAAO,GAAI8C,EAAa1D,EAAKuE,SAIrD,wBAAON,UAAS,4BAAuBQ,EAAsB,WAAa,IAA1E,UACE,uBAAOmB,QAAQ,cAAf,2CAAkE,wBAAQ3B,UAAU,mBAAmBa,QAAS,kBAAMJ,GAAwBD,IAA5E,SAAmGA,EAAsB,IAAM,MAChMA,GAAuB,0BAAUiB,GAAG,cAAcL,MAAOV,EAAYW,SAAU,SAACP,GAC/EH,EAAcG,EAAGS,OAAOH,UAEzBZ,GAAuB,wBAAQK,QAAS,WACvC,IACI7E,EAAaC,EADC2F,KAAKC,MAAMnB,IAE7BN,EAAWpE,IAHW,mCC3DjB8F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9336e2ce.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport scores from './scores.json';\r\nimport './App.css';\r\nenum HighscoreType {\r\n  BothStars = 'bothstars',\r\n  Delta = 'delta',\r\n  StarGain = 'stargain',\r\n  FirstStar = 'firststar',\r\n}\r\nconst hourInMs = 1000*60*60;\r\nconst hourInS = 60*60;\r\nconst minuteInMs = 1000*60;\r\nconst minuteInS = 60;\r\nconst secondInMs = 1000;\r\nlet days = new Array(25).fill(false);\r\nlet curDay = 1\r\nconst numEnabledDays = curDay > 25 ? 25 : curDay;\r\ndays = days.map((_, idx) => idx+1 > numEnabledDays ? false : true)\r\nconst playerList = initialiseScores(scores);\r\n\r\nfunction initialiseScores(scores: any) {\r\n  const playerList = sortPlayersForDay(\"\"+numEnabledDays, HighscoreType.BothStars, Object.entries(scores.members));\r\n  for (let i = 0; i < numEnabledDays; i++) {\r\n    insertStarGainsForDay(\"\"+(i+1), playerList);\r\n  }\r\n  return playerList;\r\n} \r\n\r\n\r\nfunction App() {\r\n  const [players, setPlayers] = useState<any[]>(playerList);\r\n  const [selectedDay, setSelectedDay] = useState<string>(\"\"+numEnabledDays);\r\n  const [selectedScoreType, setSelectedScoreType] = useState<HighscoreType>(HighscoreType.BothStars);\r\n  const [showScoreboardInput, setShowScoreboardInput] = useState<boolean>(false);\r\n  const [customJSON, setCustomJSON] = useState<string>('')\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"privboard-row\">\r\n          <span className=\"privboard-days\">\r\n            {days.map((day, idx) => {\r\n              return day ? <a href=\"\" className={\"\"+(idx+1) === selectedDay ? 'bold':''} onClick={(ev) => {\r\n                ev.preventDefault()\r\n                ev.stopPropagation();\r\n                setSelectedDay(\"\"+(idx+1));\r\n                setPlayers(sortPlayersForDay(\"\"+(idx+1), selectedScoreType, players));\r\n              }}>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</a> : <span>{(idx+1).toString().split('').map((dayNumber, dayNumberIdx) => <>{dayNumberIdx > 0 ? <br/> : <></>}{dayNumber}</>)}</span>\r\n            })}\r\n          </span>\r\n        </div>\r\n      </header>\r\n      <section>\r\n      <select value={selectedScoreType} onChange={(ev) => {\r\n        const scoreType = ev.target.value as HighscoreType;\r\n        setSelectedScoreType(scoreType)\r\n        setPlayers(sortPlayersForDay(selectedDay, scoreType, players));\r\n      }}>\r\n              <option value={HighscoreType.BothStars}>Time to both stars</option>\r\n              <option value={HighscoreType.FirstStar}>Time to first star</option>\r\n              <option value={HighscoreType.Delta}>Time between star 1 and 2</option>\r\n              <option value={HighscoreType.StarGain}>Points gained</option>\r\n      </select>\r\n\r\n        {players.map((player, idx) => {\r\n          return renderPlayer(player[1], selectedDay, idx, selectedScoreType);\r\n        })}\r\n        \r\n      </section>\r\n      <aside className={`score-input-aside ${showScoreboardInput ? 'expanded' : ''}`}>\r\n        <label htmlFor=\"scoresinput\">Insert custom scoreboard JSON</label><button className=\"link-like-button\" onClick={() => setShowScoreboardInput(!showScoreboardInput)}>{showScoreboardInput ? '-' : '+'}</button>\r\n        {showScoreboardInput && <textarea id=\"scoresinput\" value={customJSON} onChange={(ev) => {\r\n          setCustomJSON(ev.target.value)\r\n        }}></textarea>}\r\n        {showScoreboardInput && <button onClick={() => {\r\n          let parsedScore = JSON.parse(customJSON);\r\n          let playerList = initialiseScores(parsedScore);\r\n          setPlayers(playerList);\r\n        }}>Set scoreboard</button>}\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\nfunction getNthStarTs(player: any, n: number, day: string) {\r\n  return player.completion_day_level[day]?.[\"\"+n]?.get_star_ts;\r\n}\r\nfunction sortPlayersForDay(day: string, highscoreType: HighscoreType, playerList: any[]): any[] {\r\n  switch(highscoreType) {\r\n    case HighscoreType.BothStars:\r\n      return bothStarsSort(day, playerList);\r\n    case HighscoreType.Delta:\r\n      return deltaDaySort(day, playerList);\r\n    case HighscoreType.StarGain:\r\n      return starGainSort(day, playerList);\r\n    case HighscoreType.FirstStar:\r\n      return firstStarSort(day, playerList);\r\n  }\r\n}\r\nfunction bothStarsSort(day: string, playerList: any[]): any[] {\r\n  return [...playerList].sort((playerA, playerB) => {\r\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\r\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\r\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\r\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\r\n    if (playerA2Ts && playerB2Ts) {\r\n      return playerA2Ts - playerB2Ts;\r\n    } else if (playerA2Ts && !playerB2Ts) {\r\n      return playerA2Ts - Number.MAX_SAFE_INTEGER;\r\n    } else if (!playerA2Ts && playerB2Ts) {\r\n      return Number.MAX_SAFE_INTEGER - playerB2Ts;\r\n    }\r\n    return (playerA1Ts ?? Number.MAX_SAFE_INTEGER) - (playerB1Ts ?? Number.MAX_SAFE_INTEGER);\r\n  });\r\n}\r\nfunction deltaDaySort(day: string, playerList: any[]) {\r\n  return [...playerList].sort((playerA, playerB) => {\r\n    const playerA2Ts = getNthStarTs(playerA[1], 2, day);\r\n    const playerB2Ts = getNthStarTs(playerB[1], 2, day);\r\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\r\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\r\n    if (playerA2Ts && playerB2Ts) {\r\n      return (playerA2Ts - playerA1Ts) - (playerB2Ts - playerB1Ts);\r\n    } else if (playerA2Ts && !playerB2Ts) {\r\n      return (playerA2Ts - playerA1Ts) - Number.MAX_SAFE_INTEGER;\r\n    } else if (!playerA2Ts && playerB2Ts) {\r\n      return Number.MAX_SAFE_INTEGER - (playerB2Ts - playerB1Ts);\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nfunction starGainSort(day: string, playerList: any[]) {\r\n  return [...playerList].sort((playerA, playerB) => {\r\n    const playerA1Star = parseInt(playerA[1].completion_day_level[day]?.[\"1\"]?.star_gain);\r\n    const playerA2Star = parseInt(playerA[1].completion_day_level[day]?.[\"2\"]?.star_gain);\r\n    const playerAStarGain = playerA1Star + playerA2Star;\r\n    const playerB1Star = parseInt(playerB[1].completion_day_level[day]?.[\"1\"]?.star_gain);\r\n    const playerB2Star = parseInt(playerB[1].completion_day_level[day]?.[\"2\"]?.star_gain);\r\n    const playerBStarGain = playerB1Star + playerB2Star;\r\n    return playerBStarGain - playerAStarGain;\r\n  });\r\n}\r\n\r\nfunction firstStarSort(day: string, playerList: any[]) {\r\n  return [...playerList].sort((playerA, playerB) => {\r\n    const playerA1Ts = getNthStarTs(playerA[1], 1, day);\r\n    const playerB1Ts = getNthStarTs(playerB[1], 1, day);\r\n    if (playerA1Ts && playerB1Ts) {\r\n      return (playerA1Ts) - (playerB1Ts);\r\n    } else if (playerA1Ts && !playerB1Ts) {\r\n      return (playerA1Ts) - Number.MAX_SAFE_INTEGER;\r\n    } else if (!playerA1Ts && playerB1Ts) {\r\n      return Number.MAX_SAFE_INTEGER - (playerB1Ts - playerB1Ts);\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nfunction insertStarGainsForDay(day: string, playerList: any[]) {\r\n  let firstStarSortedList = firstStarSort(day, playerList);\r\n  let secondStarSortedList = bothStarsSort(day, playerList);\r\n  firstStarSortedList.forEach((player, idx, players) => {\r\n    let dayCompletion = player[1].completion_day_level[day]?.[\"1\"];\r\n    if (dayCompletion) {\r\n      dayCompletion.star_gain = players.length-idx;\r\n    } else {\r\n      player[1].completion_day_level[day] = {\r\n        '1': {\r\n          star_gain: 0,\r\n        },\r\n      }\r\n    }\r\n  });\r\n  secondStarSortedList.forEach((player, idx, players) => {\r\n    let dayCompletion = player[1].completion_day_level[day]?.[\"2\"];\r\n    if (dayCompletion) {\r\n      dayCompletion.star_gain = players.length-idx;\r\n    } else {\r\n      player[1].completion_day_level[day] = {\r\n        ...player[1].completion_day_level[day],\r\n        '2': {\r\n          star_gain: 0,\r\n        },\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction renderUnixTimestamp(ts: number, day: string): string {\r\n  if (ts === undefined) {\r\n    return '';\r\n  }\r\n  // Create a new JavaScript Date object based on the timestamp\r\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\r\n  const date0Ms = new Date(2022, 11, parseInt(day), 6, 0, 0, 0).getTime();\r\n  const finishTime = new Date(ts * 1000).getTime();\r\n  const diff = finishTime - date0Ms;\r\n\r\n  const playerHours = Math.floor(diff/hourInMs);\r\n  const playerMinutes = Math.floor((diff%hourInMs)/minuteInMs);\r\n  const playerSeconds = Math.floor((diff%minuteInMs)/secondInMs);\r\n  // Will display time in 10:30:23 format\r\n  var formattedTime = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\r\n  return formattedTime\r\n}\r\n\r\nfunction renderPlayerTime(player: any, selectedDay: string, highscoreType: HighscoreType) {\r\n  if (highscoreType === HighscoreType.BothStars || highscoreType === HighscoreType.FirstStar) {\r\n    return `${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts as number, selectedDay)} / ${renderUnixTimestamp(player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts as number, selectedDay)}`\r\n  } else if (highscoreType === HighscoreType.Delta) {\r\n    return renderPlayerDeltaTimestamp(player, selectedDay);\r\n  } else if (highscoreType === HighscoreType.StarGain) {\r\n    let star1Gain = player.completion_day_level?.[selectedDay]?.[\"1\"]?.star_gain;\r\n    let star2Gain = player.completion_day_level?.[selectedDay]?.[\"2\"]?.star_gain;\r\n    return <><span className=\"privboard-star-firstonly\">{star1Gain}</span>{' / '}<span className=\"privboard-star-both\">{star2Gain}</span>{' -> '}<span className=\"privboard-star-both\">{(star1Gain??0)+(star2Gain??0)}</span></>;\r\n  }\r\n}\r\n\r\nfunction renderPlayerDeltaTimestamp(player: any, selectedDay: string) {\r\n  const firstStarTime = player.completion_day_level?.[selectedDay]?.[\"1\"]?.get_star_ts;\r\n  const secondStarTime = player.completion_day_level?.[selectedDay]?.[\"2\"]?.get_star_ts;\r\n  if (secondStarTime === undefined) {\r\n    return '';\r\n  }\r\n  const deltaStarTime = secondStarTime - firstStarTime;\r\n  const playerHours = Math.floor(deltaStarTime/hourInS);\r\n  const playerMinutes = Math.floor((deltaStarTime%hourInS)/minuteInS);\r\n  const playerSeconds = Math.floor((deltaStarTime%minuteInS));\r\n  var formattedDelta = playerHours + ':' + playerMinutes.toString().padStart(2, \"0\")+ ':' + playerSeconds.toString().padStart(2, \"0\");\r\n  return formattedDelta;\r\n}\r\n\r\nfunction getPlacementClass(idx: number) {\r\n  switch(idx) {\r\n    case 0:\r\n      return 'privboard-star-both';\r\n    case 1:\r\n      return 'privboard-star-firstonly';\r\n    case 2:\r\n      return 'privboard-third';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction renderPlayer(player: any, selectedDay: string, idx: number, highscoreType: HighscoreType) {\r\n  return (\r\n    <div className=\"privboard-row\">\r\n      <span className=\"privboard-position\">{idx+1})</span> {renderPlayerTime(player, selectedDay, highscoreType)} <span className={`privboard-name ${getPlacementClass(idx)} ${player.name === null ? 'leaderboard-anon' : ''}`}>{player.name ?? `(anonymous user #${player.id})`}</span></div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}